package defpackage;
/* compiled from: PG */
/* renamed from: ckja  reason: default package */
/* loaded from: classes.dex */
public final class ckja {
    public static final ckha A;
    public static final ckha B;
    public static final ckha C;
    public static final ckha D;
    public static final ckha E;
    public static final ckha F;
    public static final ckha G;
    public static final ckgu H;
    public static final ckhg I;
    public static final ckgz J;
    public static final ckgz K;
    public static final ckgt L;
    public static final ckgz M;
    public static final ckgu N;
    public static final ckgu O;
    public static final ckgu P;
    public static final ckgu Q;
    public static final ckgz R;
    public static final ckgz S;
    public static final ckgz T;
    public static final ckgz U;
    public static final ckgu V;
    public static final ckgu W;
    public static final ckgz X;
    public static final ckgz Y;
    public static final ckgz Z;
    public static final ckgz aa;
    public static final ckgz ab;
    public static final ckgz ac;
    public static final ckgz ad;
    public static final ckgz ae;
    public static final ckgz af;
    public static final ckgz ag;
    public static final ckgz ah;
    public static final ckgz ai;
    public static final ckgz aj;
    public static final ckgz ak;
    public static final ckgu al;
    public static final ckgu am;
    public static final ckgu an;
    public static final ckgt ao;
    public static final ckgz ap;
    public static final ckha aq;
    public static final ckha ar;
    public static final ckgz n;
    public static final ckgz o;
    public static final ckgu p;
    public static final ckgu q;
    public static final ckgu r;
    public static final ckgu s;
    public static final ckgu t;
    public static final ckgu u;
    public static final ckha v;
    public static final ckha w;
    public static final ckha x;
    public static final ckha y;
    public static final ckha z;
    public static final ckha a = new ckha("ClientParametersAgeBeforeUpdateHours", ckgy.PLATFORM_INFRASTRUCTURE);
    public static final ckha b = new ckha("ClientParametersCacheAgeHours", ckgy.PLATFORM_INFRASTRUCTURE);
    public static final ckhg c = new ckhg("ClientParametersFetchTime", ckgy.PLATFORM_INFRASTRUCTURE);
    public static final ckha d = new ckha("ClientParametersLoadsFromDiskTimeMillis", ckgy.PLATFORM_INFRASTRUCTURE);
    public static final ckha e = new ckha("ClientParametersBlockingTimeMillisCategoricalSearch", ckgy.PLATFORM_INFRASTRUCTURE);
    public static final ckha f = new ckha("ClientParametersBlockingTimeMillisEnableFeatures", ckgy.PLATFORM_INFRASTRUCTURE);
    public static final ckha g = new ckha("ClientParametersBlockingTimeMillisLogging", ckgy.PLATFORM_INFRASTRUCTURE);
    public static final ckha h = new ckha("ClientParametersBlockingTimeMillisOfflineMaps", ckgy.PLATFORM_INFRASTRUCTURE);
    public static final ckha i = new ckha("ClientParametersBlockingTimeMillisPassiveAssist", ckgy.PLATFORM_INFRASTRUCTURE);
    public static final ckha j = new ckha("ClientParametersBlockingTimeMillisOtherGroup", ckgy.PLATFORM_INFRASTRUCTURE);
    public static final ckha k = new ckha("ClientParametersBlockingTimeMillisNoGroup", ckgy.PLATFORM_INFRASTRUCTURE);
    public static final ckgz l = new ckgz("ClientParametersBlockingCount", ckgy.PLATFORM_INFRASTRUCTURE);
    public static final ckgz m = new ckgz("ClientParametersLoadsFromDisk", ckgy.PLATFORM_INFRASTRUCTURE);

    static {
        new ckgz("ClientParametersLoadsFromDiskV2", ckgy.PLATFORM_INFRASTRUCTURE);
        n = new ckgz("ClientParametersInitialLoadCount", ckgy.PLATFORM_INFRASTRUCTURE);
        o = new ckgz("ClassNotFoundExceptionRecoveryStatus", ckgy.PLATFORM_INFRASTRUCTURE);
        p = new ckgu("NetworkSentGmmAllBytes", ckgy.PLATFORM_INFRASTRUCTURE);
        q = new ckgu("NetworkSentGmmAllMessages", ckgy.PLATFORM_INFRASTRUCTURE);
        r = new ckgu("NetworkSentGmmCompressedBytes", ckgy.PLATFORM_INFRASTRUCTURE);
        s = new ckgu("NetworkSentGmmCompressedMessages", ckgy.PLATFORM_INFRASTRUCTURE);
        t = new ckgu("NetworkSentGmmVersionHeaderBytes", ckgy.PLATFORM_INFRASTRUCTURE);
        u = new ckgu("NetworkSentGmmVersionHeaderMessages", ckgy.PLATFORM_INFRASTRUCTURE);
        v = new ckha("NetworkLatency", ckgy.PLATFORM_INFRASTRUCTURE);
        w = new ckha("NetworkSentHttpBytes", ckgy.PLATFORM_INFRASTRUCTURE);
        x = new ckha("NetworkReceivedHttpBytes", ckgy.PLATFORM_INFRASTRUCTURE);
        y = new ckha("NetworkSentProtoBytes", ckgy.PLATFORM_INFRASTRUCTURE);
        z = new ckha("NetworkReceivedProtoBytes", ckgy.PLATFORM_INFRASTRUCTURE);
        A = new ckha("NetworkReceivedBytesPerSecond", ckgy.PLATFORM_INFRASTRUCTURE);
        B = new ckha("NetworkReceivedBytesPerSession", ckgy.PLATFORM_INFRASTRUCTURE, cnkr.a);
        C = new ckha("NetworkSentBytesPerSession", ckgy.PLATFORM_INFRASTRUCTURE, cnkr.a);
        D = new ckha("NetworkProtosPerSession", ckgy.PLATFORM_INFRASTRUCTURE, cnkr.a);
        E = new ckha("NetworkHttpPerSession", ckgy.PLATFORM_INFRASTRUCTURE, cnkr.a);
        F = new ckha("NetworkSentBytesPerSecondDuringSession", ckgy.PLATFORM_INFRASTRUCTURE, cnkr.a);
        G = new ckha("NetworkReceivedBytesPerSecondDuringSession", ckgy.PLATFORM_INFRASTRUCTURE, cnkr.a);
        new ckgu("NetworkImageRequests", ckgy.PLATFORM_INFRASTRUCTURE);
        H = new ckgu("NetworkResourceRequests", ckgy.PLATFORM_INFRASTRUCTURE);
        I = new ckhg("StorageFinishDatabaseOperationsTime", ckgy.PLATFORM_INFRASTRUCTURE);
        new ckgz("ServerRequestsWithAccountWithoutAuthToken", ckgy.PLATFORM_INFRASTRUCTURE);
        new ckgz("ServerRequestsWithAccountWithAuthToken", ckgy.PLATFORM_INFRASTRUCTURE);
        new ckgz("ServerRequestsWithoutAccountWithZwieback", ckgy.PLATFORM_INFRASTRUCTURE);
        new ckgz("ServerRequestsWithoutAccountWithoutZwieback", ckgy.PLATFORM_INFRASTRUCTURE);
        J = new ckgz("GaiaTokenCacheInteraction", ckgy.PLATFORM_INFRASTRUCTURE);
        K = new ckgz("GoogleApiClientConnectionEvent", ckgy.PLATFORM_INFRASTRUCTURE);
        L = new ckgt("LeakMetricActivityRetainedAfterOnDestroy", ckgy.PLATFORM_INFRASTRUCTURE);
        M = new ckgz("LeakMetricStaleActivityCountAtOnCreate", ckgy.PLATFORM_INFRASTRUCTURE);
        N = new ckgu("SignInCount", ckgy.PLATFORM_INFRASTRUCTURE);
        O = new ckgu("SignOutCount", ckgy.PLATFORM_INFRASTRUCTURE);
        P = new ckgu("EnterIncognitoCount", ckgy.PLATFORM_INFRASTRUCTURE);
        Q = new ckgu("ExitIncognitoCount", ckgy.PLATFORM_INFRASTRUCTURE);
        new ckgu("ExitIncognitoAndSignInCount", ckgy.PLATFORM_INFRASTRUCTURE);
        new ckgu("ExitIncognitoAndSignOutCount", ckgy.PLATFORM_INFRASTRUCTURE);
        R = new ckgz("AppStartResponseCodes", ckgy.PLATFORM_INFRASTRUCTURE);
        S = new ckgz("AppStartResponseCodesOnRetry", ckgy.PLATFORM_INFRASTRUCTURE);
        T = new ckgz("AuthTokenExpirationTimeMinutes", ckgy.PLATFORM_INFRASTRUCTURE);
        U = new ckgz("AuthTokenExpirationTimeMinutesAfterForceRefresh", ckgy.PLATFORM_INFRASTRUCTURE);
        V = new ckgu("AuthTokenMissingExpirationTime", ckgy.PLATFORM_INFRASTRUCTURE);
        W = new ckgu("AuthTokenRefreshedBeforeExpiry", ckgy.PLATFORM_INFRASTRUCTURE);
        X = new ckgz("PhenotypeHeterodyneRegistrationSuccessful", ckgy.PLATFORM_INFRASTRUCTURE);
        Y = new ckgz("PhenotypeHeterodyneGetConfigSnapshotSuccessful", ckgy.PLATFORM_INFRASTRUCTURE);
        Z = new ckgz("PhenotypeHeterodyneCommitSnapshotSuccessful", ckgy.PLATFORM_INFRASTRUCTURE);
        aa = new ckgz("PhenotypeHeterodyneDarkLaunchDiffResult", ckgy.PLATFORM_INFRASTRUCTURE);
        ab = new ckgz("PhenotypeHeterodyneFlagIdsOnlyInPh", ckgy.PLATFORM_INFRASTRUCTURE);
        ac = new ckgz("PhenotypeHeterodyneFlagIdsOnlyInPhWithDefaultValue", ckgy.PLATFORM_INFRASTRUCTURE);
        ad = new ckgz("PhenotypeHeterodyneFlagIdsOnlyInGws", ckgy.PLATFORM_INFRASTRUCTURE);
        ae = new ckgz("PhenotypeHeterodyneFlagIdsValuesDiffGwsPh", ckgy.PLATFORM_INFRASTRUCTURE);
        af = new ckgz("PhenotypeHeterodyneExperimentIdsInGws", ckgy.PLATFORM_INFRASTRUCTURE);
        ag = new ckgz("PhenotypeHeterodyneFlagIdsPhFlagNotBuiltIntoProto", ckgy.PLATFORM_INFRASTRUCTURE);
        ah = new ckgz("NativeHelperSafeLoadLibraryResult", ckgy.PLATFORM_INFRASTRUCTURE);
        ai = new ckgz("MemoryAllocatedForAblationExperiment", ckgy.PLATFORM_INFRASTRUCTURE);
        aj = new ckgz("MemoryAllocationRequestedForAblationExperiment", ckgy.PLATFORM_INFRASTRUCTURE);
        ak = new ckgz("MemoryAllocationRequestedButExceedsLimits", ckgy.PLATFORM_INFRASTRUCTURE);
        al = new ckgu("ClearcutFlushTimeoutCount", ckgy.PLATFORM_INFRASTRUCTURE);
        new ckgu("StartupLocationAccessRequestCount", ckgy.PLATFORM_INFRASTRUCTURE);
        new ckgz("StartupLocationAccessRequestResult", ckgy.PLATFORM_INFRASTRUCTURE);
        am = new ckgu("Rgb565GlideBitmapPoolHitCount", ckgy.PLATFORM_INFRASTRUCTURE);
        an = new ckgu("Rgb565GlideBitmapPoolMissCount", ckgy.PLATFORM_INFRASTRUCTURE);
        ao = new ckgt("Rgb565GlideMemoryCacheHit", ckgy.PLATFORM_INFRASTRUCTURE);
        ap = new ckgz("ConcurrentIntentCount", ckgy.PLATFORM_INFRASTRUCTURE);
        aq = new ckha("TotalRequestSizeBytesCompressed", ckgy.PLATFORM_INFRASTRUCTURE);
        ar = new ckha("TotalResponseSizeBytesCompressed", ckgy.PLATFORM_INFRASTRUCTURE);
    }
}
