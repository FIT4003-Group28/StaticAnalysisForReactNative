package defpackage;
/* compiled from: PG */
/* renamed from: ckia  reason: default package */
/* loaded from: classes4.dex */
public final class ckia {
    public static final ckgu A;
    public static final ckgz B;
    public static final ckgz C;
    public static final ckha D;
    public static final ckgu E;
    public static final ckgz F;
    public static final ckgz G;
    public static final ckgz H;
    public static final ckgz I;
    public static final ckgu J;
    public static final ckgu K;
    public static final ckgu L;
    public static final ckgz M;
    public static final ckgz a = new ckgz("OfflineNotificationCount", ckgy.OFFLINE);
    public static final ckgz b = new ckgz("OfflineAreasUpdateFailureCount", ckgy.OFFLINE);
    public static final ckgz c = new ckgz("OfflineAreasUpdateFailureCountByUpdateType", ckgy.OFFLINE);
    public static final ckgu d = new ckgu("OfflineAreasUpdateSuccessCount", ckgy.OFFLINE);
    public static final ckgz e = new ckgz("OfflineAreasUpdateSuccessCountByUpdateType", ckgy.OFFLINE);
    public static final ckgz f = new ckgz("OfflineAreasUpdateStartCount", ckgy.OFFLINE);
    public static final ckgz g = new ckgz("OfflineAutoUpdateJobServiceTrimMemoryCount", ckgy.OFFLINE);
    public static final ckgz h;
    public static final ckgz i;
    public static final ckha j;
    public static final ckgu k;
    public static final ckgz l;
    public static final ckgu m;
    public static final ckgu n;
    public static final ckgz o;
    public static final ckgz p;
    public static final ckha q;
    public static final ckha r;
    public static final ckha s;
    public static final ckgz t;
    public static final ckgz u;
    public static final ckha v;
    public static final ckha w;
    public static final ckgu x;
    public static final ckgu y;
    public static final ckha z;

    static {
        new ckgz("OfflineAutoUpdateGcmServiceTrimMemoryCount", ckgy.OFFLINE);
        h = new ckgz("OfflineManualDownloadServiceTrimMemoryCount", ckgy.OFFLINE);
        i = new ckgz("OfflineAutoUpdateStartCountByExecutionPolicy", ckgy.OFFLINE);
        j = new ckha("OfflineAutoUpdateJobInterruptionTimeSeconds", ckgy.OFFLINE);
        new ckgu("OfflineDynamicPaddingLanguageChangeCount", ckgy.OFFLINE);
        k = new ckgu("OfflineExpiredRegionDeleteCount", ckgy.OFFLINE);
        l = new ckgz("OfflineExpiredRegionDeleteCountByFreshness", ckgy.OFFLINE);
        m = new ckgu("OfflineAutoUpdateWhileLoggedOutCount", ckgy.OFFLINE);
        n = new ckgu("OfflineAutoUpdateWhileSdCardUnmountedCount", ckgy.OFFLINE);
        o = new ckgz("OfflineUpdateDeferralReason", ckgy.OFFLINE);
        p = new ckgz("OfflineEjectCount", ckgy.OFFLINE);
        q = new ckha("OfflineAutoUpdateClientWaitTimeSeconds", ckgy.OFFLINE);
        r = new ckha("OfflineManualUpdateClientWaitTimeSeconds", ckgy.OFFLINE);
        s = new ckha("OfflineDynamicUpdateClientWaitTimeSeconds", ckgy.OFFLINE);
        new ckha("OfflineUpdateClientWaitTimeSeconds", ckgy.OFFLINE);
        t = new ckgz("OfflineExternalSearchCount", ckgy.OFFLINE);
        new ckgz("OfflineExternalSearchDirectionsCount", ckgy.OFFLINE);
        u = new ckgz("OfflineNativeInfrastructureFailureCount", ckgy.OFFLINE);
        v = new ckha("OfflineNativeInfrastructureFailureDbFullByFreeMb", ckgy.OFFLINE);
        w = new ckha("OfflineNativeInfrastructureFailureDbFullByUsedMb", ckgy.OFFLINE);
        x = new ckgu("OfflineNativeInfrastructureMigrationCount", ckgy.OFFLINE);
        y = new ckgu("OfflineNativeInfrastructureUnexpectedNullState", ckgy.OFFLINE);
        z = new ckha("OfflineAutodownloadStorageDeficitMegaBytes", ckgy.OFFLINE);
        A = new ckgu("OfflineAreasUpdateTimeoutCount", ckgy.OFFLINE);
        B = new ckgz("OfflineAreasDaysSinceUsedCount", ckgy.OFFLINE);
        C = new ckgz("OfflineAutoUpdateScheduleCountByState", ckgy.OFFLINE);
        D = new ckha("OfflineAutoUpdateStartCountByHoursSinceLast", ckgy.OFFLINE);
        E = new ckgu("OfflineRegionNameFromPassiveAssistCount", ckgy.OFFLINE);
        F = new ckgz("OfflineDiffApplicationFailureByResourceType", ckgy.OFFLINE);
        G = new ckgz("OfflineDiffApplicationFailureByLoggedCode", ckgy.OFFLINE);
        H = new ckgz("OfflineInsufficientSpaceToPerformUpdate", ckgy.OFFLINE);
        I = new ckgz("OfflineManualRegionDownloadOfflineablePointsCount", ckgy.OFFLINE);
        new ckgz("OfflineManualRegionDownloadOfflineabilityWaitTimeSeconds", ckgy.OFFLINE);
        new ckgu("OfflineManualRegionDownloadOfflineabilityFailures", ckgy.OFFLINE);
        new ckgu("OfflineManualRegionDownloadOfflineabilitySuccess", ckgy.OFFLINE);
        J = new ckgu("OfflineAccountListUpdatedButUnavailable", ckgy.OFFLINE);
        new ckgz("OfflineMapsDownloadExecutionExceptionCount", ckgy.OFFLINE);
        new ckgz("OfflineMapsDownloadTimeoutExceptionCount", ckgy.OFFLINE);
        new ckgz("OfflineNavSessionLoggingExecutionExceptionCount", ckgy.OFFLINE);
        new ckgz("OfflineNavSessionLoggingTimeoutExceptionCount", ckgy.OFFLINE);
        K = new ckgu("OfflineCoverageMonitorRequestLocationFailures", ckgy.OFFLINE);
        L = new ckgu("OfflineCoverageMonitorRequestLocationSuccess", ckgy.OFFLINE);
        M = new ckgz("OfflinePaintStyleTableResourceMissing", ckgy.OFFLINE);
    }
}
