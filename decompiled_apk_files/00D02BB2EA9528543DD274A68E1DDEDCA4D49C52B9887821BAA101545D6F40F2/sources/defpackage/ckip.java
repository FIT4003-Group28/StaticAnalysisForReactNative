package defpackage;
/* compiled from: PG */
/* renamed from: ckip  reason: default package */
/* loaded from: classes.dex */
public final class ckip {
    public static final ckgz M;
    public static final ckgt N;
    public static final ckgz O;
    public static final ckgz P;
    public static final ckgz Q;
    public static final ckgz R;
    public static final ckgz S;
    public static final ckgz T;
    public static final ckgt U;
    public static final ckgt V;
    public static final ckgt W;
    public static final ckgt X;
    public static final ckgt Y;
    public static final ckgz Z;
    public static final ckha aa;
    public static final ckha ab;
    public static final ckha ac;
    public static final ckha ad;
    public static final ckha ae;
    public static final ckha af;
    public static final ckha ag;
    public static final ckgz ah;
    public static final ckgu ai;
    public static final ckgz aj;
    public static final ckgz ak;
    public static final ckgu al;
    public static final ckgu am;
    public static final ckgz an;
    public static final ckgu ao;
    public static final ckgz ap;
    public static final ckha a = new ckha("ApplicationCreateProcessTime", ckgy.PERFORMANCE);
    public static final ckha b = new ckha("ApplicationOnCreateTime", ckgy.PERFORMANCE);
    public static final ckha c = new ckha("ActivityOnCreateTime", ckgy.PERFORMANCE);
    public static final ckha d = new ckha("ActivityOnNewIntentTime", ckgy.PERFORMANCE);
    public static final ckha e = new ckha("ActivityOnStartTime", ckgy.PERFORMANCE);
    public static final ckha f = new ckha("ActivityOnRestartTime", ckgy.PERFORMANCE);
    public static final ckha g = new ckha("ActivityOnResumeTime", ckgy.PERFORMANCE);
    public static final ckha h = new ckha("StartupTimeCleanCreateApplication", ckgy.PERFORMANCE);
    public static final ckha i = new ckha("StartupTimeRestoredCreateApplication", ckgy.PERFORMANCE);
    public static final ckha j = new ckha("StartupTimeCleanCreateActivity", ckgy.PERFORMANCE);
    public static final ckha k = new ckha("StartupTimeRestoredCreateActivity", ckgy.PERFORMANCE);
    public static final ckha l = new ckha("StartupTimeResumedActivity", ckgy.PERFORMANCE);
    public static final ckha m = new ckha("StartupTimeResumedActivityFromHistoryList", ckgy.PERFORMANCE);
    public static final ckha n = new ckha("StartupActivityCreationToUiVisibleTime", ckgy.PERFORMANCE);
    public static final ckha o = new ckha("StartupActivityCreationToUiInteractiveTime", ckgy.PERFORMANCE);
    public static final ckhf p = new ckhf("StartupMyLocationControllerResumeToFreshLocationFixTime", ckgy.PERFORMANCE);
    public static final ckgu q = new ckgu("CacheManagerTrimCacheCount", ckgy.PERFORMANCE);
    public static final ckgz r = new ckgz("CacheManagerTrimEventCount", ckgy.PERFORMANCE);
    public static final ckgz s = new ckgz("CacheManagerOnTrimMemoryCompleteTrimmedPercentage", ckgy.PERFORMANCE);
    public static final ckgz t = new ckgz("CacheManagerOnTrimMemoryCompleteTrimmedSize", ckgy.PERFORMANCE);
    public static final ckgz u = new ckgz("CacheManagerOnTrimMemoryModerateTrimmedPercentage", ckgy.PERFORMANCE);
    public static final ckgz v = new ckgz("CacheManagerOnTrimMemoryModerateTrimmedSize", ckgy.PERFORMANCE);
    public static final ckgz w = new ckgz("CacheManagerOnTrimMemoryBackgroundTrimmedPercentage", ckgy.PERFORMANCE);
    public static final ckgz x = new ckgz("CacheManagerOnTrimMemoryBackgroundTrimmedSize", ckgy.PERFORMANCE);
    public static final ckgz y = new ckgz("CacheManagerOnTrimMemoryUiHiddenTrimmedPercentage", ckgy.PERFORMANCE);
    public static final ckgz z = new ckgz("CacheManagerOnTrimMemoryUiHiddenTrimmedSize", ckgy.PERFORMANCE);
    public static final ckgz A = new ckgz("CacheManagerOnTrimMemoryRunningCriticalTrimmedPercentage", ckgy.PERFORMANCE);
    public static final ckgz B = new ckgz("CacheManagerOnTrimMemoryRunningCriticalTrimmedSize", ckgy.PERFORMANCE);
    public static final ckgz C = new ckgz("CacheManagerOnTrimMemoryRunningLowTrimmedPercentage", ckgy.PERFORMANCE);
    public static final ckgz D = new ckgz("CacheManagerOnTrimMemoryRunningLowTrimmedSize", ckgy.PERFORMANCE);
    public static final ckgz E = new ckgz("CacheManagerOnTrimMemoryRunningModerateTrimmedPercentage", ckgy.PERFORMANCE);
    public static final ckgz F = new ckgz("CacheManagerOnTrimMemoryRunningModerateTrimmedSize", ckgy.PERFORMANCE);
    public static final ckgz G = new ckgz("CacheManagerOnTrimMemoryThresholdReachedTrimmedPercentage", ckgy.PERFORMANCE);
    public static final ckgz H = new ckgz("CacheManagerOnTrimMemoryThresholdReachedTrimmedSize", ckgy.PERFORMANCE);
    public static final ckha I = new ckha("MemoryUsagePercentagePostStartup", ckgy.PERFORMANCE, ckde.f);
    public static final ckha J = new ckha("MemoryUsageMegaBytesPostStartup", ckgy.PERFORMANCE, ckde.d);
    public static final ckha K = new ckha("MemoryUsagePercentagePreActivity", ckgy.PERFORMANCE, ckde.f);
    public static final ckha L = new ckha("MemoryUsageMegaBytesPreActivity", ckgy.PERFORMANCE, ckde.d);

    static {
        new ckha("MemoryUsagePercentage", ckgy.PERFORMANCE, ckde.f);
        new ckha("MemoryUsageMegaBytes", ckgy.PERFORMANCE, ckde.d);
        M = new ckgz("SystemHealthApiBackgroundStartService", ckgy.PERFORMANCE);
        N = new ckgt("ResourceCacheHit", ckgy.PERFORMANCE);
        O = new ckgz("LruCacheHit", ckgy.PERFORMANCE);
        P = new ckgz("LruCacheMiss", ckgy.PERFORMANCE);
        Q = new ckgz("LongLruCacheHit", ckgy.PERFORMANCE);
        R = new ckgz("LongLruCacheMiss", ckgy.PERFORMANCE);
        S = new ckgz("ObjectPoolCacheHit", ckgy.PERFORMANCE);
        T = new ckgz("ObjectPoolCacheMiss", ckgy.PERFORMANCE);
        U = new ckgt("GlTileCacheHit", ckgy.PERFORMANCE);
        V = new ckgt("TrimmableCurvularViewPoolCacheHit", ckgy.PERFORMANCE);
        W = new ckgt("PersonalPlacesLocalCacheHit", ckgy.PERFORMANCE);
        X = new ckgt("ContextDataControllerImplCacheHit", ckgy.PERFORMANCE);
        Y = new ckgt("LabelFactoryCacheHit", ckgy.PERFORMANCE);
        Z = new ckgz("GlideLoadedFrom", ckgy.PERFORMANCE);
        aa = new ckha("ImageFetchTime", ckgy.PERFORMANCE);
        ab = new ckha("CategoricalSearchResponseCacheHitMemory", ckgy.PERFORMANCE);
        ac = new ckha("CategoricalSearchResponseCacheMissMemory", ckgy.PERFORMANCE);
        new ckha("MockCacheHitMemory", ckgy.PERFORMANCE, ckde.i);
        new ckha("MockCacheMissMemory", ckgy.PERFORMANCE, ckde.i);
        new ckha("MockCacheHitDisk", ckgy.PERFORMANCE, ckde.i);
        new ckha("MockCacheMissDisk", ckgy.PERFORMANCE, ckde.i);
        ad = new ckha("PlaceDetailsCacheHitMemory", ckgy.PERFORMANCE);
        ae = new ckha("PlaceDetailsCacheMissMemory", ckgy.PERFORMANCE);
        af = new ckha("PlaceDetailsCacheHitDisk", ckgy.PERFORMANCE);
        ag = new ckha("PlaceDetailsCacheMissDisk", ckgy.PERFORMANCE);
        ah = new ckgz("PlaceDetailsCacheSkipCache", ckgy.PERFORMANCE);
        ai = new ckgu("GlobalHttpCacheDeletionCount", ckgy.PERFORMANCE);
        aj = new ckgz("ZeroSuggestWarmupRecentHistoryCount", ckgy.PERFORMANCE);
        ak = new ckgz("ClientParametersUpdateType", ckgy.PERFORMANCE);
        al = new ckgu("UserEvent3EventsCount", ckgy.PERFORMANCE);
        new ckgu("Ue3AdsEventsCount", ckgy.PERFORMANCE);
        new ckgu("Ue3HotelImpressionsCount", ckgy.PERFORMANCE);
        am = new ckgu("Ue3EventsCount", ckgy.PERFORMANCE);
        an = new ckgz("CronetFailToLoadFromGmscore", ckgy.PERFORMANCE);
        ao = new ckgu("CronetAttemptToLoadFromGmscore", ckgy.PERFORMANCE);
        ap = new ckgz("UnavailableErrorCronetCode", ckgy.PERFORMANCE);
    }
}
