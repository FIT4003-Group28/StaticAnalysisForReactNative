#!/bin/bash

if [ $# -ne 1 ]
  then
    echo "Usage is ./hbcgen-lib <npm_package>"
    exit 1
fi

if [ -d './tmp' ]
  then
    echo './tmp directory already exists... deleting'
    rm -r tmp
fi
mkdir tmp
if [ ! $? ]
  then exit 1
fi
O_PATH=$(pwd)
TMP_DIR="$O_PATH/tmp"
cd $TMP_DIR

echo "Creating temp npm package"
npm init -y > /dev/null 2&>1
echo "Installing 'browserify'"
npm install browserify > /dev/null
echo "Installing 'hermes-engine-cli'"
npm install hermes-engine-cli > /dev/null

echo "Installing npm package '$1'"
npm install $1 > /dev/null
if [ ! $? ]
  then
    echo "Error: Failed to install npm package '"$1"'"
    exit 1
fi

# trap 'rm -r $TMP_DIR' EXIT

ENTRY_POINT=$(cat ./node_modules/$1/package.json | python3 -c 'import json, sys; pj = json.load(sys.stdin); print(pj["main"] if "main" in pj else "index.js")')
echo "Bundling npm package into '$1.js'"
./node_modules/browserify/bin/cmd.js -s $1 --bare --detect-globals --no-bundle-external ./node_modules/$1/$ENTRY_POINT -o $1.js
if [ ! -e "./$1.js" ]
  then
    echo "Error: Failed to bundle npm package '$1'"
    exit 1
fi

echo "Converting js bundle into compiled HBC"
./node_modules/hermes-engine-cli/linux64-bin/hermesc -O -emit-binary -out=$1.bundle.hbc $1.js
if [ ! $? ]
  then
    echo "Error: Failed to compile bundled js into HBC"
    exit 1
fi

echo "Disassembling compiled HBC into readable HBC"
./node_modules/hermes-engine-cli/linux64-bin/hermesc -dump-bytecode -out ../$1.hbc $1.bundle.hbc
if [ ! $? ]
  then
    echo "Error: Failed to compile bundled js into HBC"
    exit 1
fi

cd $O_PATH
echo "Done! Output >> $O_PATH/$1.hbc"
